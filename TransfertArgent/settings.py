"""
Django settings for TransfertArgent project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import datetime

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5i&ytxdt54xwu3x(n496%um=+k&mjvfkg71d__1zu!2*vci09_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# URL de la vérification de l'email lors de l'inscription
REGISTER_EMAIL_VERIFICATION_URL = 'https://ton-site.com/verify-email/{uid}/{token}/'

# URL de réinitialisation du mot de passe
RESET_PASSWORD_VERIFICATION_URL = 'https://ton-site.com/reset-password/{uid}/{token}/'

# URL de confirmation de l'inscription de l'utilisateur
REGISTER_VERIFICATION_URL = 'https://ton-site.com/verify-registration/{uid}/{token}/'


ALLOWED_HOSTS = []

AUTH_USER_MODEL = "accounts.UserRegistrationModel"


# Configuration pour l'envoi d'e-mails via Gmail 
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' 
EMAIL_HOST = 'smtp.gmail.com' 
EMAIL_PORT = 587 
EMAIL_USE_TLS = True 
EMAIL_HOST_USER = 'paulnicolas519@gmail.com' # Remplace par ton adresse email EMAIL_HOST_PASSWORD = 'tonmotdepasse' # Remplace par ton mot de passe


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'transactions',
    'audits',
    'rest_framework',
    'rest_registration',
    'rest_framework_swagger',
    # 'drf_yasg' ,
    'rest_framework_simplejwt',
    'drf_spectacular',
]


SPECTACULAR_SETTINGS = {
    'TITLE': 'Send Cash Money',
    'DESCRIPTION': 'Mon projet de transfert dargent',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    # OTHER SETTINGS
}



REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',  # Render responses as JSON
        'rest_framework.renderers.BrowsableAPIRenderer',  # Optional: Web-based API UI
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',  # Parse JSON data
        'rest_framework.parsers.FormParser',  # Parse form data
        'rest_framework.parsers.MultiPartParser',  # Parse file uploads
    ],
    # 'DEFAULT_AUTHENTICATION_CLASSES': [
    #     'rest_framework.authentication.SessionAuthentication',  # Use Django sessions
    #     'rest_framework.authentication.TokenAuthentication',  # Optional: Token-based auth
    # ],

    'DEFAULT_AUTHENTICATION_CLASSES': [ 'rest_framework_simplejwt.authentication.JWTAuthentication', ], 
    # 'DEFAULT_PERMISSION_CLASSES': [ 'rest_framework.permissions.IsAuthenticated',], # Permet d'accéder aux API sécurisées ],
    
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',  # Optional: Pagination
    'PAGE_SIZE': 10,  # Default number of items per page

    # YOUR SETTINGS
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}



# Secret Key pour JWT (assurez-vous de garder ceci sécurisé) 
SIMPLE_JWT = { 'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=20),  # Durée de vie du token d'accès
              'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=7), # Durée de vie du token de rafraîchissement
               'ROTATE_REFRESH_TOKENS': False, # Indique si les tokens de rafraîchissement doivent être régénérés
                'BLACKLIST_AFTER_ROTATION': True,  # Mettre en liste noire les anciens tokens de rafraîchis

}            

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]




# Paramètres rest-registrations
REST_REGISTRATION = {
    'REGISTER_EMAIL_VERIFICATION': True,  # Active la vérification par email pour l'inscription
    'REGISTER_EMAIL_SUBJECT': 'Biconfigenue sur notre plateforme',  # Sujet de l'email de biconfigenue
    'RESET_PASSWORD_EMAIL_SUBJECT': 'Réinitialisation de votre mot de passe',  # Sujet pour la réinitialisation du mot de passe
    'RESET_PASSWORD_VERIFICATION_URL': RESET_PASSWORD_VERIFICATION_URL,  # URL de réinitialisation
    'REGISTER_VERIFICATION_URL': REGISTER_VERIFICATION_URL,  # URL de vérification de l'inscription
    'REGISTER_EMAIL_VERIFICATION_URL': REGISTER_EMAIL_VERIFICATION_URL,  # URL de vérification de l'email
    # 'VERIFICATION_FROM_EMAIL': VERIFICATION_FROM_EMAIL,  # Email d'expéditeur

    'REGISTER_SERIALIZER_CLASS': 'accounts.serialize.UserRegistrationModelSerializer',
    'REGISTER_VERIFICATION_ENABLED': False,
    'REGISTER_EMAIL_VERIFICATION_ENABLED': False,
    'RESET_PASSWORD_VERIFICATION_ENABLED': False,
}




# Authentification par email uniquement
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'  # Force la vérification par email après inscription


ROOT_URLCONF = 'TransfertArgent.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'TransfertArgent.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

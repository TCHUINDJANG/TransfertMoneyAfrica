# Generated by Django 5.1.3 on 2024-12-03 08:00

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('date_of_creation', models.DateTimeField(auto_created=True, blank=True, null=True)),
                ('date_of_update', models.DateTimeField(auto_created=True, blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip_adress', models.GenericIPAddressField(blank=True, null=True)),
                ('name_of_country', models.CharField(max_length=10)),
                ('code_of_country', models.CharField(max_length=50)),
                ('drapeau', models.ImageField(blank=True, null=True, upload_to='flag')),
            ],
            options={
                'ordering': ['-name_of_country'],
            },
        ),
        migrations.CreateModel(
            name='UserRegistrationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('is_verified_phone', models.BooleanField(default=False)),
                ('is_verified_email', models.BooleanField(default=False)),
                ('verification_code', models.BooleanField(default=False)),
                ('confirm_password', models.CharField(blank=True, max_length=150, verbose_name='confirm_password')),
                ('role', models.CharField(choices=[('user', 'Utilisateur'), ('admin', 'Administrateur'), ('operator', 'Op√©rateur de transaction')], default='user', max_length=20)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_group', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.group')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.country')),
            ],
            options={
                'ordering': ['-country'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('date_of_creation', models.DateTimeField(auto_created=True, blank=True, null=True)),
                ('date_of_update', models.DateTimeField(auto_created=True, blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip_adress', models.GenericIPAddressField(blank=True, null=True)),
                ('solde', models.PositiveIntegerField(default=5000.0, verbose_name='Solde disponible dans le compte')),
                ('devise', models.CharField(default='XAF', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-solde'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('date_of_creation', models.DateTimeField(auto_created=True, blank=True, null=True)),
                ('date_of_update', models.DateTimeField(auto_created=True, blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip_adress', models.GenericIPAddressField(blank=True, null=True)),
                ('document_of_personnel_identification', models.FileField(blank=True, null=True, upload_to='documents')),
                ('adress_of_residence', models.CharField(blank=True, max_length=10, null=True)),
                ('region', models.CharField(max_length=30)),
                ('birth_day', models.DateField(blank=True, null=True)),
                ('bio', models.TextField(blank=True)),
                ('email', models.EmailField(max_length=254)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Homme'), ('F', 'Femme')], max_length=1, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-user'],
            },
        ),
    ]
